{"version":3,"sources":["src/helpers/filter.ts","src/worker/main.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"main.f02cc06a.js","sourceRoot":"..","sourcesContent":["/**\n * Logic for filtering frames based on stats.\n */\nimport crate from \"../../crate/Cargo.toml\"\n\nimport * as natureHelpers from \"./nature\"\n\nimport type {\n    FrameFilter,\n    ShinyFilter,\n    AbilityFilter,\n    GenderFilter,\n    IVJudgment,\n    RangeDirection,\n    SingleIVFilter,\n} from \"../../crate/pkg/raidtomi\"\nimport type { NatureFilterData } from \"./nature\"\n\n// We need a serializable representation of SingleIVFilter, since the crate import\n// is memory-managed by Rust.\nexport type SingleIVFilterData = [\n    direction: RangeDirection,\n    judgment: IVJudgment,\n]\n\nexport type Filters = {\n    shiny: ShinyFilter | undefined\n    iv: [\n        SingleIVFilterData | undefined,\n        SingleIVFilterData | undefined,\n        SingleIVFilterData | undefined,\n        SingleIVFilterData | undefined,\n        SingleIVFilterData | undefined,\n        SingleIVFilterData | undefined,\n    ]\n    ability: AbilityFilter | undefined\n    gender: GenderFilter | undefined\n    nature: NatureFilterData | undefined\n}\n\nconst LOCAL_FILTER_KEY = \"filter:v2\"\n\nexport function createDefaultFilters(): Filters {\n    const serializedFilters = localStorage.getItem(LOCAL_FILTER_KEY)\n    if (serializedFilters) {\n        const parsed = JSON.parse(serializedFilters)\n\n        // Fix nulls.\n        return {\n            shiny: parsed.shiny === null ? undefined : parsed.shiny,\n            iv: parsed.iv.map((iv: SingleIVFilterData | null) =>\n                iv === null ? undefined : iv,\n            ),\n            ability: parsed.ability === null ? undefined : parsed.ability,\n            gender: parsed.gender === null ? undefined : parsed.gender,\n            nature: parsed.nature === null ? undefined : parsed.nature,\n        }\n    }\n    return {\n        shiny: crate.ShinyFilter.Shiny,\n        iv: [undefined, undefined, undefined, undefined, undefined, undefined],\n        ability: undefined,\n        gender: undefined,\n        nature: undefined,\n    }\n}\n\nexport function saveFilters(filters: Filters): void {\n    localStorage.setItem(LOCAL_FILTER_KEY, JSON.stringify(filters))\n}\n\nconst createSingleIVFilter = (\n    f: SingleIVFilterData | undefined,\n): SingleIVFilter | undefined => {\n    if (!f) {\n        return f\n    }\n    return f[0] === crate.RangeDirection.AtLeast\n        ? crate.SingleIVFilter.new_at_least(f[0])\n        : crate.SingleIVFilter.new_at_most(f[0])\n}\n\nexport const createFilter = (filter: Filters): FrameFilter => {\n    const ff = new crate.FrameFilter()\n    if (filter.shiny !== undefined) {\n        ff.set_shiny(filter.shiny)\n    }\n    if (filter.iv.some(Boolean)) {\n        ff.set_ivs(...filter.iv.map(createSingleIVFilter))\n    }\n    if (filter.gender !== undefined) {\n        ff.set_gender(filter.gender)\n    }\n    if (filter.ability !== undefined) {\n        ff.set_ability(filter.ability)\n    }\n    if (filter.nature !== undefined) {\n        ff.set_nature(natureHelpers.createNatureFilter(filter.nature))\n    }\n    return ff\n}\n","/**\n * Main Web Worker thread.\n */\n\nimport crate from \"../../crate/Cargo.toml\"\n\nimport * as den from \"../helpers/den\"\nimport * as filter from \"../helpers/filter\"\nimport * as frame from \"../helpers/frame\"\n\nimport type { DenEncounter } from \"../helpers/den\"\nimport type { Filters } from \"../helpers/filter\"\nimport type { WorkerRequest, WorkerResponse } from \"./message\"\n\n/**\n * A typed wrapper for `postMessage`.\n */\nfunction postMessageToMain(message: WorkerResponse): void {\n    globalThis.postMessage(message)\n}\n\nglobalThis.onmessage = (e: MessageEvent<WorkerRequest>) => {\n    const { data: request } = e\n    switch (request.type) {\n        case \"SEARCH_REQUEST\": {\n            handleSearch(request.data)\n        }\n    }\n}\n\nfunction handleSearch(args: {\n    currentEncounter: DenEncounter\n    seed: BigInt\n    filters: Filters\n}): void {\n    const { currentEncounter, seed, filters } = args\n    const raid = den.createRaid(currentEncounter)\n    const result = crate.search(raid, seed, filter.createFilter(filters))\n\n    const data = result\n        ? {\n              type: \"ok\" as const,\n              value: frame.createFrame(result[0], result[1]),\n          }\n        : {\n              type: \"err\" as const,\n              error: undefined,\n          }\n\n    postMessageToMain({\n        type: \"SEARCH_RESPONSE\",\n        data: { result: data },\n    })\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* Returns the personal info for a given mon and form.\n* @param {number} species\n* @param {number} form\n* @returns {Mon | undefined}\n*/\n__exports. get_personal_info = function(species, form) {\n    var ret = wasm.get_personal_info(species, form);\n    return ret === 0 ? undefined : Mon.__wrap(ret);\n}\n\n/**\n*/\n__exports. run = function() {\n    wasm.run();\n}\n\n/**\n* List a certain number of frames, beginning with some seed.\n* @param {Raid} raid\n* @param {BigInt} seed\n* @param {number} num_frames\n* @returns {Array<any>}\n*/\n__exports. list_frames = function(raid, seed, num_frames) {\n    _assertClass(raid, Raid);\n    var ptr0 = raid.ptr;\n    raid.ptr = 0;\n    uint64CvtShim[0] = seed;\n    const low1 = u32CvtShim[0];\n    const high1 = u32CvtShim[1];\n    var ret = wasm.list_frames(ptr0, low1, high1, num_frames);\n    return takeObject(ret);\n}\n\n/**\n* Search for a frame matching the given filter.\n* @param {Raid} raid\n* @param {BigInt} seed\n* @param {FrameFilter} filter\n* @returns {SearchResult | undefined}\n*/\n__exports. search = function(raid, seed, filter) {\n    _assertClass(raid, Raid);\n    var ptr0 = raid.ptr;\n    raid.ptr = 0;\n    uint64CvtShim[0] = seed;\n    const low1 = u32CvtShim[0];\n    const high1 = u32CvtShim[1];\n    _assertClass(filter, FrameFilter);\n    var ptr2 = filter.ptr;\n    filter.ptr = 0;\n    var ret = wasm.search(ptr0, low1, high1, ptr2);\n    return ret === 0 ? undefined : SearchResult.__wrap(ret);\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n* Specifies bounds for a single IV.\n*/\n__exports.IVJudgment = Object.freeze({ NoGood:0,\"0\":\"NoGood\",Decent:1,\"1\":\"Decent\",PrettyGood:2,\"2\":\"PrettyGood\",VeryGood:3,\"3\":\"VeryGood\",Fantastic:4,\"4\":\"Fantastic\",Best:5,\"5\":\"Best\", });\n/**\n*/\n__exports.RangeDirection = Object.freeze({ AtLeast:0,\"0\":\"AtLeast\",AtMost:1,\"1\":\"AtMost\", });\n/**\n* Specifies shininess.\n*/\n__exports.ShinyFilter = Object.freeze({ Shiny:0,\"0\":\"Shiny\",Square:1,\"1\":\"Square\", });\n/**\n* Specifies ability.\n*/\n__exports.AbilityFilter = Object.freeze({ First:0,\"0\":\"First\",Second:1,\"1\":\"Second\",Hidden:2,\"2\":\"Hidden\", });\n/**\n* Specifies gender.\n*/\n__exports.GenderFilter = Object.freeze({ Male:0,\"0\":\"Male\",Female:1,\"1\":\"Female\", });\n/**\n* Whether a mon is shiny, and if so, what type of shiny.\n*/\n__exports.Shininess = Object.freeze({ None:0,\"0\":\"None\",Star:1,\"1\":\"Star\",Square:2,\"2\":\"Square\", });\n/**\n* What ability a mon has.\n* Not all mons have a second ability or HA.\n*/\n__exports.Ability = Object.freeze({ First:0,\"0\":\"First\",Second:1,\"1\":\"Second\",Hidden:2,\"2\":\"Hidden\", });\n/**\n* What gender a mon has.\n*/\n__exports.Gender = Object.freeze({ Male:0,\"0\":\"Male\",Female:1,\"1\":\"Female\",Genderless:2,\"2\":\"Genderless\", });\n/**\n* What nature a mon has.\n* Nature determines the pace of stat progression.\n*/\n__exports.Nature = Object.freeze({ Hardy:0,\"0\":\"Hardy\",Lonely:1,\"1\":\"Lonely\",Brave:2,\"2\":\"Brave\",Adamant:3,\"3\":\"Adamant\",Naughty:4,\"4\":\"Naughty\",Bold:5,\"5\":\"Bold\",Docile:6,\"6\":\"Docile\",Relaxed:7,\"7\":\"Relaxed\",Impish:8,\"8\":\"Impish\",Lax:9,\"9\":\"Lax\",Timid:10,\"10\":\"Timid\",Hasty:11,\"11\":\"Hasty\",Serious:12,\"12\":\"Serious\",Jolly:13,\"13\":\"Jolly\",Naive:14,\"14\":\"Naive\",Modest:15,\"15\":\"Modest\",Mild:16,\"16\":\"Mild\",Quiet:17,\"17\":\"Quiet\",Bashful:18,\"18\":\"Bashful\",Rash:19,\"19\":\"Rash\",Calm:20,\"20\":\"Calm\",Gentle:21,\"21\":\"Gentle\",Sassy:22,\"22\":\"Sassy\",Careful:23,\"23\":\"Careful\",Quirky:24,\"24\":\"Quirky\", });\n/**\n* Possible overworld marks.\n*/\n__exports.PersonalityMark = Object.freeze({ Rowdy:0,\"0\":\"Rowdy\",AbsentMinded:1,\"1\":\"AbsentMinded\",Jittery:2,\"2\":\"Jittery\",Excited:3,\"3\":\"Excited\",Charismatic:4,\"4\":\"Charismatic\",Calmness:5,\"5\":\"Calmness\",Intense:6,\"6\":\"Intense\",ZonedOut:7,\"7\":\"ZonedOut\",Joyful:8,\"8\":\"Joyful\",Angry:9,\"9\":\"Angry\",Smiley:10,\"10\":\"Smiley\",Teary:11,\"11\":\"Teary\",Upbeat:12,\"12\":\"Upbeat\",Peeved:13,\"13\":\"Peeved\",Intellectual:14,\"14\":\"Intellectual\",Ferocious:15,\"15\":\"Ferocious\",Crafty:16,\"16\":\"Crafty\",Scowling:17,\"17\":\"Scowling\",Kindly:18,\"18\":\"Kindly\",Flustered:19,\"19\":\"Flustered\",PumpedUp:20,\"20\":\"PumpedUp\",ZeroEnergy:21,\"21\":\"ZeroEnergy\",Prideful:22,\"22\":\"Prideful\",Unsure:23,\"23\":\"Unsure\",Humble:24,\"24\":\"Humble\",Thorny:25,\"25\":\"Thorny\",Vigor:26,\"26\":\"Vigor\",Slump:27,\"27\":\"Slump\", });\n/**\n*/\nclass  Abilities {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Abilities.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_abilities_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get 0() {\n        var ret = wasm.__wbg_get_abilities_0(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 0(arg0) {\n        wasm.__wbg_set_abilities_0(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 1() {\n        var ret = wasm.__wbg_get_abilities_1(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 1(arg0) {\n        wasm.__wbg_set_abilities_1(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 2() {\n        var ret = wasm.__wbg_get_abilities_2(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 2(arg0) {\n        wasm.__wbg_set_abilities_2(this.ptr, arg0);\n    }\n}\n/**\n* Data for an individual frame of a given raid.\n*/\nclass  Frame {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Frame.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            shiny: this.shiny,\n            ivs: this.ivs,\n            ability: this.ability,\n            gender: this.gender,\n            nature: this.nature,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_frame_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get shiny() {\n        var ret = wasm.__wbg_get_frame_shiny(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set shiny(arg0) {\n        wasm.__wbg_set_frame_shiny(this.ptr, arg0);\n    }\n    /**\n    * @returns {IVs}\n    */\n    get ivs() {\n        var ret = wasm.__wbg_get_frame_ivs(this.ptr);\n        return IVs.__wrap(ret);\n    }\n    /**\n    * @param {IVs} arg0\n    */\n    set ivs(arg0) {\n        _assertClass(arg0, IVs);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_frame_ivs(this.ptr, ptr0);\n    }\n    /**\n    * @returns {number}\n    */\n    get ability() {\n        var ret = wasm.__wbg_get_frame_ability(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set ability(arg0) {\n        wasm.__wbg_set_frame_ability(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get gender() {\n        var ret = wasm.__wbg_get_frame_gender(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set gender(arg0) {\n        wasm.__wbg_set_frame_gender(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get nature() {\n        var ret = wasm.__wbg_get_frame_nature(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set nature(arg0) {\n        wasm.__wbg_set_frame_nature(this.ptr, arg0);\n    }\n    /**\n    * @returns {Seed}\n    */\n    get_seed() {\n        var ret = wasm.frame_get_seed(this.ptr);\n        return Seed.__wrap(ret);\n    }\n}\n/**\n* Filter aspects of a frame.\n*/\nclass  FrameFilter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FrameFilter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            shiny: this.shiny,\n            ivs: this.ivs,\n            ability: this.ability,\n            gender: this.gender,\n            nature: this.nature,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_framefilter_free(ptr);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get shiny() {\n        var ret = wasm.__wbg_get_framefilter_shiny(this.ptr);\n        return ret === 2 ? undefined : ret;\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set shiny(arg0) {\n        wasm.__wbg_set_framefilter_shiny(this.ptr, isLikeNone(arg0) ? 2 : arg0);\n    }\n    /**\n    * @returns {IVFilter | undefined}\n    */\n    get ivs() {\n        var ret = wasm.__wbg_get_framefilter_ivs(this.ptr);\n        return ret === 0 ? undefined : IVFilter.__wrap(ret);\n    }\n    /**\n    * @param {IVFilter | undefined} arg0\n    */\n    set ivs(arg0) {\n        let ptr0 = 0;\n        if (!isLikeNone(arg0)) {\n            _assertClass(arg0, IVFilter);\n            ptr0 = arg0.ptr;\n            arg0.ptr = 0;\n        }\n        wasm.__wbg_set_framefilter_ivs(this.ptr, ptr0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get ability() {\n        var ret = wasm.__wbg_get_framefilter_ability(this.ptr);\n        return ret === 3 ? undefined : ret;\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set ability(arg0) {\n        wasm.__wbg_set_framefilter_ability(this.ptr, isLikeNone(arg0) ? 3 : arg0);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    get gender() {\n        var ret = wasm.__wbg_get_framefilter_gender(this.ptr);\n        return ret === 2 ? undefined : ret;\n    }\n    /**\n    * @param {number | undefined} arg0\n    */\n    set gender(arg0) {\n        wasm.__wbg_set_framefilter_gender(this.ptr, isLikeNone(arg0) ? 2 : arg0);\n    }\n    /**\n    * @returns {NatureFilter | undefined}\n    */\n    get nature() {\n        var ret = wasm.__wbg_get_framefilter_nature(this.ptr);\n        return ret === 0 ? undefined : NatureFilter.__wrap(ret);\n    }\n    /**\n    * @param {NatureFilter | undefined} arg0\n    */\n    set nature(arg0) {\n        let ptr0 = 0;\n        if (!isLikeNone(arg0)) {\n            _assertClass(arg0, NatureFilter);\n            ptr0 = arg0.ptr;\n            arg0.ptr = 0;\n        }\n        wasm.__wbg_set_framefilter_nature(this.ptr, ptr0);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.framefilter_new();\n        return FrameFilter.__wrap(ret);\n    }\n    /**\n    * @param {number} filter\n    * @returns {FrameFilter}\n    */\n    set_shiny(filter) {\n        var ret = wasm.framefilter_set_shiny(this.ptr, filter);\n        return FrameFilter.__wrap(ret);\n    }\n    /**\n    * @param {SingleIVFilter | undefined} hp\n    * @param {SingleIVFilter | undefined} atk\n    * @param {SingleIVFilter | undefined} def\n    * @param {SingleIVFilter | undefined} spa\n    * @param {SingleIVFilter | undefined} spd\n    * @param {SingleIVFilter | undefined} spe\n    * @returns {FrameFilter}\n    */\n    set_ivs(hp, atk, def, spa, spd, spe) {\n        let ptr0 = 0;\n        if (!isLikeNone(hp)) {\n            _assertClass(hp, SingleIVFilter);\n            ptr0 = hp.ptr;\n            hp.ptr = 0;\n        }\n        let ptr1 = 0;\n        if (!isLikeNone(atk)) {\n            _assertClass(atk, SingleIVFilter);\n            ptr1 = atk.ptr;\n            atk.ptr = 0;\n        }\n        let ptr2 = 0;\n        if (!isLikeNone(def)) {\n            _assertClass(def, SingleIVFilter);\n            ptr2 = def.ptr;\n            def.ptr = 0;\n        }\n        let ptr3 = 0;\n        if (!isLikeNone(spa)) {\n            _assertClass(spa, SingleIVFilter);\n            ptr3 = spa.ptr;\n            spa.ptr = 0;\n        }\n        let ptr4 = 0;\n        if (!isLikeNone(spd)) {\n            _assertClass(spd, SingleIVFilter);\n            ptr4 = spd.ptr;\n            spd.ptr = 0;\n        }\n        let ptr5 = 0;\n        if (!isLikeNone(spe)) {\n            _assertClass(spe, SingleIVFilter);\n            ptr5 = spe.ptr;\n            spe.ptr = 0;\n        }\n        var ret = wasm.framefilter_set_ivs(this.ptr, ptr0, ptr1, ptr2, ptr3, ptr4, ptr5);\n        return FrameFilter.__wrap(ret);\n    }\n    /**\n    * @param {number} filter\n    * @returns {FrameFilter}\n    */\n    set_ability(filter) {\n        var ret = wasm.framefilter_set_ability(this.ptr, filter);\n        return FrameFilter.__wrap(ret);\n    }\n    /**\n    * @param {number} filter\n    * @returns {FrameFilter}\n    */\n    set_gender(filter) {\n        var ret = wasm.framefilter_set_gender(this.ptr, filter);\n        return FrameFilter.__wrap(ret);\n    }\n    /**\n    * @param {NatureFilter} filter\n    * @returns {FrameFilter}\n    */\n    set_nature(filter) {\n        _assertClass(filter, NatureFilter);\n        var ptr0 = filter.ptr;\n        filter.ptr = 0;\n        var ret = wasm.framefilter_set_nature(this.ptr, ptr0);\n        return FrameFilter.__wrap(ret);\n    }\n}\n/**\n* Frame generator, taking an initial seed and raid and generating frames.\n*/\nclass  FrameGenerator {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FrameGenerator.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_framegenerator_free(ptr);\n    }\n    /**\n    * @param {Raid} raid\n    * @param {BigInt} seed\n    */\n    constructor(raid, seed) {\n        _assertClass(raid, Raid);\n        var ptr0 = raid.ptr;\n        raid.ptr = 0;\n        uint64CvtShim[0] = seed;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ret = wasm.framegenerator_new(ptr0, low1, high1);\n        return FrameGenerator.__wrap(ret);\n    }\n    /**\n    * Sets a filter to be applied to subsequent iterations.\n    * @param {FrameFilter} filter\n    */\n    set_filter(filter) {\n        _assertClass(filter, FrameFilter);\n        var ptr0 = filter.ptr;\n        filter.ptr = 0;\n        wasm.framegenerator_set_filter(this.ptr, ptr0);\n    }\n    /**\n    * Calculates IVs, taking into account the number of best IVs from the star count.\n    * @param {Rng} rng\n    * @param {number} min_flawless_ivs\n    * @returns {IVs}\n    */\n    static get_ivs(rng, min_flawless_ivs) {\n        _assertClass(rng, Rng);\n        var ret = wasm.framegenerator_get_ivs(rng.ptr, min_flawless_ivs);\n        return IVs.__wrap(ret);\n    }\n}\n/**\n*/\nclass  IVFilter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(IVFilter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_ivfilter_free(ptr);\n    }\n}\n/**\n* Individual Values for a mon's stats.\n*/\nclass  IVs {\n\n    static __wrap(ptr) {\n        const obj = Object.create(IVs.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_ivs_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get 0() {\n        var ret = wasm.__wbg_get_ivs_0(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 0(arg0) {\n        wasm.__wbg_set_ivs_0(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 1() {\n        var ret = wasm.__wbg_get_ivs_1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 1(arg0) {\n        wasm.__wbg_set_ivs_1(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 2() {\n        var ret = wasm.__wbg_get_ivs_2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 2(arg0) {\n        wasm.__wbg_set_ivs_2(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 3() {\n        var ret = wasm.__wbg_get_ivs_3(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 3(arg0) {\n        wasm.__wbg_set_ivs_3(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 4() {\n        var ret = wasm.__wbg_get_ivs_4(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 4(arg0) {\n        wasm.__wbg_set_ivs_4(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 5() {\n        var ret = wasm.__wbg_get_ivs_5(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 5(arg0) {\n        wasm.__wbg_set_ivs_5(this.ptr, arg0);\n    }\n}\n/**\n*/\nclass  Mon {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Mon.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_mon_free(ptr);\n    }\n    /**\n    * Returns abilities.\n    * @returns {Abilities}\n    */\n    get_abilities() {\n        var ret = wasm.mon_get_abilities(this.ptr);\n        return Abilities.__wrap(ret);\n    }\n    /**\n    * Returns the gender ratio.\n    * @returns {number}\n    */\n    get_gender_ratio() {\n        var ret = wasm.mon_get_gender_ratio(this.ptr);\n        return ret;\n    }\n    /**\n    * Returns the index of the first alternate form.\n    * @returns {number}\n    */\n    get_form_index() {\n        var ret = wasm.mon_get_form_index(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Returns a list of genders.\n    * @returns {number}\n    */\n    get_form_count() {\n        var ret = wasm.mon_get_form_count(this.ptr);\n        return ret;\n    }\n}\n/**\n* Specifies nature.\n*\n* Nature filter is implemented as a little-endian bit vector of length 25:\n* - `Hardy` is index 0, so its filter is `0000000000000000000000001`\n* - `Bashful` is index 18, so the filter for \"Bashful OR Hardy\" is 0000001000000000000000001 There should only be one way to express \"anything goes\": by not passing\n* a filter at all.\n* - `Anything goes` is 1111111111111111111111111 There should only be one way to express \"anything goes\": by not passing\n* a filter at all.\n*\n* By default, we use 0. There should only be one way to express \"anything goes\": by not passing\n* a filter at all.\n*/\nclass  NatureFilter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(NatureFilter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_naturefilter_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.naturefilter_new();\n        return NatureFilter.__wrap(ret);\n    }\n    /**\n    * @param {Uint32Array} vec\n    * @returns {NatureFilter}\n    */\n    static from_vec(vec) {\n        var ptr0 = passArray32ToWasm0(vec, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.naturefilter_from_vec(ptr0, len0);\n        return NatureFilter.__wrap(ret);\n    }\n}\n/**\n* Overworld state machine, taking an initial seed and generating frames.\n*/\nclass  OverworldState {\n\n    toJSON() {\n        return {\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_overworldstate_free(ptr);\n    }\n}\n/**\n*/\nclass  PersonalTable {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_personaltable_free(ptr);\n    }\n}\n/**\n* Represents a raid mon's possible stats: form, gender, ability, IVs, etc.\n* These are defined in the game data and control things.\n*/\nclass  Raid {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Raid.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_raid_free(ptr);\n    }\n    /**\n    * @param {number} species\n    * @param {number} alt_form\n    * @param {number} min_flawless_ivs\n    * @param {boolean} is_gmax\n    * @param {number} ability_pool\n    * @param {number} gender_pool\n    */\n    constructor(species, alt_form, min_flawless_ivs, is_gmax, ability_pool, gender_pool) {\n        var ret = wasm.raid_new(species, alt_form, min_flawless_ivs, is_gmax, ability_pool, gender_pool);\n        return Raid.__wrap(ret);\n    }\n}\n/**\n* Keeps track of the state.\n*/\nclass  Rng {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_rng_free(ptr);\n    }\n}\n/**\n*/\nclass  SearchResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SearchResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_searchresult_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get 0() {\n        var ret = wasm.__wbg_get_searchresult_0(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 0(arg0) {\n        wasm.__wbg_set_searchresult_0(this.ptr, arg0);\n    }\n    /**\n    * @returns {Frame}\n    */\n    get 1() {\n        var ret = wasm.__wbg_get_searchresult_1(this.ptr);\n        return Frame.__wrap(ret);\n    }\n    /**\n    * @param {Frame} arg0\n    */\n    set 1(arg0) {\n        _assertClass(arg0, Frame);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_searchresult_1(this.ptr, ptr0);\n    }\n}\n/**\n* We can't expose a u64 to JavaScript, so break the seed into two u32s.\n*/\nclass  Seed {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Seed.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_seed_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get 0() {\n        var ret = wasm.__wbg_get_seed_0(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 0(arg0) {\n        wasm.__wbg_set_seed_0(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get 1() {\n        var ret = wasm.__wbg_get_seed_1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set 1(arg0) {\n        wasm.__wbg_set_seed_1(this.ptr, arg0);\n    }\n    /**\n    * @param {BigInt} n\n    * @returns {Seed}\n    */\n    static from_u64(n) {\n        uint64CvtShim[0] = n;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.seed_from_u64(low0, high0);\n        return Seed.__wrap(ret);\n    }\n}\n/**\n*/\nclass  SingleIVFilter {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SingleIVFilter.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_singleivfilter_free(ptr);\n    }\n    /**\n    * @param {number} judgment\n    * @returns {SingleIVFilter}\n    */\n    static new_at_least(judgment) {\n        var ret = wasm.singleivfilter_new_at_least(judgment);\n        return SingleIVFilter.__wrap(ret);\n    }\n    /**\n    * @param {number} judgment\n    * @returns {SingleIVFilter}\n    */\n    static new_at_most(judgment) {\n        var ret = wasm.singleivfilter_new_at_most(judgment);\n        return SingleIVFilter.__wrap(ret);\n    }\n}\n\n__exports.__wbg_frame_new = function(arg0) {\n    var ret = Frame.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\n__exports.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n__exports.__wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\n__exports.__wbg_new_17534eac4df3cd22 = function() {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_push_7114ccbf1c58e41f = function(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\n__exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n__exports. Abilities =  Abilities;\n__exports. Frame =  Frame;\n__exports. FrameFilter =  FrameFilter;\n__exports. FrameGenerator =  FrameGenerator;\n__exports. IVFilter =  IVFilter;\n__exports. IVs =  IVs;\n__exports. Mon =  Mon;\n__exports. NatureFilter =  NatureFilter;\n__exports. OverworldState =  OverworldState;\n__exports. PersonalTable =  PersonalTable;\n__exports. Raid =  Raid;\n__exports. Rng =  Rng;\n__exports. SearchResult =  SearchResult;\n__exports. Seed =  Seed;\n__exports. SingleIVFilter =  SingleIVFilter;\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './raidtomi_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './raidtomi_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './raidtomi_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}